import c from"https://esm.sh/aladin-lite@3.3.2-beta";var h=0;function b(e){let i=e.split("_");for(let r=1;r<i.length;r++)i[r]=i[r].charAt(0).toUpperCase()+i[r].slice(1);return i.join("")}async function k({model:e}){await c.init}function C({model:e,el:i}){let r={};e.get("init_options").forEach(t=>{r[b(t)]=e.get(t)});let s=document.createElement("div");s.classList.add("aladin-widget"),s.style.height=`${r.height}px`,s.id=`aladin-lite-div-${h}`;let a=new c.aladin(s,r);h+=1,i.appendChild(s);let f=!1,g=!1;a.on("positionChanged",t=>{g?g=!1:(f=!0,e.set("target",`${t.ra} ${t.dec}`),e.save_changes())}),e.on("change:target",()=>{if(f)f=!1;else{g=!0;let t=e.get("target");a.gotoObject(t)}});let l=!1,d=!1;return a.on("zoomChanged",t=>{l?l=!1:(d=!0,e.set("fov",parseFloat(t.toFixed(5))),e.save_changes())}),e.on("change:fov",()=>{if(d)d=!1;else{l=!0;let t=e.get("fov");a.setFoV(t)}}),e.on("change:height",()=>{let t=e.get("height");s.style.height=`${t}px`}),a.on("objectHovered",t=>{t.data!=null&&e.send({event_type:"object_hovered",content:{ra:t.ra,dec:t.dec}})}),a.on("objectClicked",t=>{let n={ra:t.ra,dec:t.dec};t.data!==void 0&&(n.data=t.data),e.set("clicked",n),e.send({event_type:"object_clicked",content:n}),e.save_changes()}),a.on("click",t=>{e.send({event_type:"click",content:t}),e.set("clicked",t),e.save_changes()}),a.on("selectionchange",t=>{console.log(t),a.view.catalogs.forEach(o=>{o.deselectAll()});let n={};t.forEach(o=>{n.push({ra:o.ra,dec:o.dec,data:o.data,x:o.x,y:o.y})}),console.log(n),e.send({event_type:"select",content:n})}),e.on("change:coo_frame",()=>{a.setFrame(e.get("coo_frame"))}),e.on("change:survey",()=>{a.setImageSurvey(e.get("survey"))}),e.on("change:overlay_survey",()=>{a.setOverlayImageLayer(e.get("overlay_survey"))}),e.on("change:overlay_survey_opacity",()=>{a.getOverlayImageLayer().setAlpha(e.get("overlay_survey_opacity"))}),e.on("msg:custom",t=>{let n={};switch(t.event_name){case"add_catalog_from_URL":a.addCatalog(c.catalogFromURL(t.votable_URL,t.options));break;case"add_MOC_from_URL":n=t.options,n.lineWidth===void 0&&(n.lineWidth=3),a.addMOC(c.MOCFromURL(t.moc_URL,n));break;case"add_MOC_from_dict":n=t.options,n.lineWidth===void 0&&(n.lineWidth=3),a.addMOC(c.MOCFromJSON(t.moc_dict,n));break;case"add_overlay_from_stcs":let o=c.graphicOverlay(t.overlay_options);a.addOverlay(o),o.addFootprints(c.footprintsFromSTCS(t.stc_string));break;case"change_colormap":a.getBaseImageLayer().setColormap(t.colormap);break;case"get_JPG_thumbnail":a.exportAsPNG();break;case"trigger_rectangular_selection":a.select();break;case"add_table":let v=e.get("_table"),p=new TextDecoder("utf-8"),u=new Blob([p.decode(v)]),_=URL.createObjectURL(u);c.catalogFromURL(_,Object.assign(t.options,{onClick:"showTable"}),y=>{a.addCatalog(y)},!1),URL.revokeObjectURL(_);break}}),()=>{e.off("change:target"),e.off("change:fov"),e.off("change:height"),e.off("change:coo_frame"),e.off("change:survey"),e.off("change:overlay_survey"),e.off("change:overlay_survey_opacity"),e.off("change:trigger_event"),e.off("change:_table"),e.off("msg:custom"),a.off("positionChanged"),a.off("zoomChanged"),a.off("objectHovered"),a.off("objectClicked"),a.off("click"),a.off("select")}}var x={initialize:k,render:C};export{x as default};
//# sourceMappingURL=data:application/json;base64,
